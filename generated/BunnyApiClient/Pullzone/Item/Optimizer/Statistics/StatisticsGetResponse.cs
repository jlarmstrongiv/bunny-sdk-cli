// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace BunnyApiClient.Pullzone.Item.Optimizer.Statistics
{
    #pragma warning disable CS1591
    public class StatisticsGetResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Average compression chart of the responses</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageCompressionChart? AverageCompressionChart { get; set; }
#nullable restore
#else
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageCompressionChart AverageCompressionChart { get; set; }
#endif
        /// <summary>The average compression ratio of CDN responses</summary>
        public double? AverageCompressionRatio { get; set; }
        /// <summary>The average processing time of each request</summary>
        public double? AverageProcessingTime { get; set; }
        /// <summary>The AverageProcessingTimeChart property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageProcessingTimeChart? AverageProcessingTimeChart { get; set; }
#nullable restore
#else
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageProcessingTimeChart AverageProcessingTimeChart { get; set; }
#endif
        /// <summary>The constructed chart of optimized requests</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_RequestsOptimizedChart? RequestsOptimizedChart { get; set; }
#nullable restore
#else
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_RequestsOptimizedChart RequestsOptimizedChart { get; set; }
#endif
        /// <summary>The total number of optimized requests</summary>
        public double? TotalRequestsOptimized { get; set; }
        /// <summary>The total requests saved</summary>
        public double? TotalTrafficSaved { get; set; }
        /// <summary>The constructed chart of saved traffic</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_TrafficSavedChart? TrafficSavedChart { get; set; }
#nullable restore
#else
        public global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_TrafficSavedChart TrafficSavedChart { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse"/> and sets the default values.
        /// </summary>
        public StatisticsGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AverageCompressionChart", n => { AverageCompressionChart = n.GetObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageCompressionChart>(global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageCompressionChart.CreateFromDiscriminatorValue); } },
                { "AverageCompressionRatio", n => { AverageCompressionRatio = n.GetDoubleValue(); } },
                { "AverageProcessingTime", n => { AverageProcessingTime = n.GetDoubleValue(); } },
                { "AverageProcessingTimeChart", n => { AverageProcessingTimeChart = n.GetObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageProcessingTimeChart>(global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageProcessingTimeChart.CreateFromDiscriminatorValue); } },
                { "RequestsOptimizedChart", n => { RequestsOptimizedChart = n.GetObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_RequestsOptimizedChart>(global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_RequestsOptimizedChart.CreateFromDiscriminatorValue); } },
                { "TotalRequestsOptimized", n => { TotalRequestsOptimized = n.GetDoubleValue(); } },
                { "TotalTrafficSaved", n => { TotalTrafficSaved = n.GetDoubleValue(); } },
                { "TrafficSavedChart", n => { TrafficSavedChart = n.GetObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_TrafficSavedChart>(global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_TrafficSavedChart.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageCompressionChart>("AverageCompressionChart", AverageCompressionChart);
            writer.WriteDoubleValue("AverageCompressionRatio", AverageCompressionRatio);
            writer.WriteDoubleValue("AverageProcessingTime", AverageProcessingTime);
            writer.WriteObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_AverageProcessingTimeChart>("AverageProcessingTimeChart", AverageProcessingTimeChart);
            writer.WriteObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_RequestsOptimizedChart>("RequestsOptimizedChart", RequestsOptimizedChart);
            writer.WriteDoubleValue("TotalRequestsOptimized", TotalRequestsOptimized);
            writer.WriteDoubleValue("TotalTrafficSaved", TotalTrafficSaved);
            writer.WriteObjectValue<global::BunnyApiClient.Pullzone.Item.Optimizer.Statistics.StatisticsGetResponse_TrafficSavedChart>("TrafficSavedChart", TrafficSavedChart);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
