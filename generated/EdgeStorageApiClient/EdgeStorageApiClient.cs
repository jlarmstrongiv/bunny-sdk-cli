// <auto-generated/>
using EdgeStorageApiClient.Item;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Cli.Commons.IO;
using Microsoft.Kiota.Cli.Commons;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.CommandLine;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System;
namespace EdgeStorageApiClient
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class EdgeStorageApiClient : BaseCliRequestBuilder
    {
        /// <summary>
        /// Gets an item from the EdgeStorageApiClient.item collection
        /// </summary>
        /// <returns>A Tuple&lt;List&lt;Command&gt;, List&lt;Command&gt;&gt;</returns>
        public Tuple<List<Command>, List<Command>> BuildCommand()
        {
            var commands = new List<Command>();
            var builder = new global::EdgeStorageApiClient.Item.WithStorageZoneNameItemRequestBuilder(PathParameters);
            commands.Add(builder.BuildCommand());
            return new(new(0), commands);
        }
        /// <summary>
        /// Instantiates a new <see cref="EdgeStorageApiClient.EdgeStorageApiClient"/> and sets the default values.
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildRootCommand()
        {
            var command = new RootCommand();
            command.Description = "Instantiates a new EdgeStorageApiClient and sets the default values.";
            command.AddCommand(BuildCommand());
            return command;
        }
        /// <summary>
        /// Instantiates a new <see cref="EdgeStorageApiClient.EdgeStorageApiClient"/> and sets the default values.
        /// </summary>
        public EdgeStorageApiClient() : base("{+baseurl}", new Dictionary<string, object>())
        {
        }
    }
}
