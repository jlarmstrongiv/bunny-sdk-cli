// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BunnyApiClient.Models.Shield
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CreateWafRateLimitRuleModel : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The blockTime property</summary>
        public double? BlockTime { get; set; }
        /// <summary>The operatorType property</summary>
        public double? OperatorType { get; set; }
        /// <summary>The requestCount property</summary>
        public int? RequestCount { get; set; }
        /// <summary>The severityType property</summary>
        public double? SeverityType { get; set; }
        /// <summary>The timeframe property</summary>
        public double? Timeframe { get; set; }
        /// <summary>The transformationTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? TransformationTypes { get; set; }
#nullable restore
#else
        public List<double?> TransformationTypes { get; set; }
#endif
        /// <summary>The value property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Value { get; set; }
#nullable restore
#else
        public string Value { get; set; }
#endif
        /// <summary>The variableTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel_variableTypes? VariableTypes { get; set; }
#nullable restore
#else
        public global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel_variableTypes VariableTypes { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel"/> and sets the default values.
        /// </summary>
        public CreateWafRateLimitRuleModel()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "blockTime", n => { BlockTime = n.GetDoubleValue(); } },
                { "operatorType", n => { OperatorType = n.GetDoubleValue(); } },
                { "requestCount", n => { RequestCount = n.GetIntValue(); } },
                { "severityType", n => { SeverityType = n.GetDoubleValue(); } },
                { "timeframe", n => { Timeframe = n.GetDoubleValue(); } },
                { "transformationTypes", n => { TransformationTypes = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
                { "value", n => { Value = n.GetStringValue(); } },
                { "variableTypes", n => { VariableTypes = n.GetObjectValue<global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel_variableTypes>(global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel_variableTypes.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("blockTime", BlockTime);
            writer.WriteDoubleValue("operatorType", OperatorType);
            writer.WriteIntValue("requestCount", RequestCount);
            writer.WriteDoubleValue("severityType", SeverityType);
            writer.WriteDoubleValue("timeframe", Timeframe);
            writer.WriteCollectionOfPrimitiveValues<double?>("transformationTypes", TransformationTypes);
            writer.WriteStringValue("value", Value);
            writer.WriteObjectValue<global::BunnyApiClient.Models.Shield.CreateWafRateLimitRuleModel_variableTypes>("variableTypes", VariableTypes);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
