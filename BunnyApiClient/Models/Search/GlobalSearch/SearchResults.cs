// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BunnyApiClient.Models.Search.GlobalSearch
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class SearchResults : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The number of results skipped in the search query</summary>
        public int? From { get; set; }
        /// <summary>The input query for the search request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Query { get; set; }
#nullable restore
#else
        public string Query { get; set; }
#endif
        /// <summary>The list of search results found for the query</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BunnyApiClient.Models.Search.GlobalSearch.SearchResult>? SearchResultsProp { get; set; }
#nullable restore
#else
        public List<global::BunnyApiClient.Models.Search.GlobalSearch.SearchResult> SearchResultsProp { get; set; }
#endif
        /// <summary>The size of the result set</summary>
        public int? Size { get; set; }
        /// <summary>The total number of search results found matching the query</summary>
        public int? Total { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::BunnyApiClient.Models.Search.GlobalSearch.SearchResults"/> and sets the default values.
        /// </summary>
        public SearchResults()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BunnyApiClient.Models.Search.GlobalSearch.SearchResults"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BunnyApiClient.Models.Search.GlobalSearch.SearchResults CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BunnyApiClient.Models.Search.GlobalSearch.SearchResults();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "From", n => { From = n.GetIntValue(); } },
                { "Query", n => { Query = n.GetStringValue(); } },
                { "SearchResults", n => { SearchResultsProp = n.GetCollectionOfObjectValues<global::BunnyApiClient.Models.Search.GlobalSearch.SearchResult>(global::BunnyApiClient.Models.Search.GlobalSearch.SearchResult.CreateFromDiscriminatorValue)?.AsList(); } },
                { "Size", n => { Size = n.GetIntValue(); } },
                { "Total", n => { Total = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("From", From);
            writer.WriteStringValue("Query", Query);
            writer.WriteCollectionOfObjectValues<global::BunnyApiClient.Models.Search.GlobalSearch.SearchResult>("SearchResults", SearchResultsProp);
            writer.WriteIntValue("Size", Size);
            writer.WriteIntValue("Total", Total);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
