// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Cli.Commons.IO;
using Microsoft.Kiota.Cli.Commons;
using StreamApiClient.Library.Item.Collections;
using StreamApiClient.Library.Item.Statistics;
using StreamApiClient.Library.Item.Videos;
using System.Collections.Generic;
using System.CommandLine;
using System.IO;
using System.Text;
using System.Threading.Tasks;
using System;
namespace StreamApiClient.Library.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \library\{libraryId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class WithLibraryItemRequestBuilder : BaseCliRequestBuilder
    {
        /// <summary>
        /// The collections property
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildCollectionsNavCommand()
        {
            var command = new Command("collections");
            command.Description = "The collections property";
            var builder = new global::StreamApiClient.Library.Item.Collections.CollectionsRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            var nonExecCommands = new List<Command>();
            execCommands.Add(builder.BuildCreateCommand());
            execCommands.Add(builder.BuildListCommand());
            var cmds = builder.BuildCommand();
            execCommands.AddRange(cmds.Item1);
            nonExecCommands.AddRange(cmds.Item2);
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            foreach (var cmd in nonExecCommands.OrderBy(static c => c.Name, StringComparer.Ordinal))
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// The statistics property
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildStatisticsNavCommand()
        {
            var command = new Command("statistics");
            command.Description = "The statistics property";
            var builder = new global::StreamApiClient.Library.Item.Statistics.StatisticsRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            execCommands.Add(builder.BuildGetCommand());
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// The videos property
        /// </summary>
        /// <returns>A <see cref="Command"/></returns>
        public Command BuildVideosNavCommand()
        {
            var command = new Command("videos");
            command.Description = "The videos property";
            var builder = new global::StreamApiClient.Library.Item.Videos.VideosRequestBuilder(PathParameters);
            var execCommands = new List<Command>();
            var nonExecCommands = new List<Command>();
            execCommands.Add(builder.BuildCreateCommand());
            nonExecCommands.Add(builder.BuildFetchNavCommand());
            execCommands.Add(builder.BuildListCommand());
            var cmds = builder.BuildCommand();
            execCommands.AddRange(cmds.Item1);
            nonExecCommands.AddRange(cmds.Item2);
            foreach (var cmd in execCommands)
            {
                command.AddCommand(cmd);
            }
            foreach (var cmd in nonExecCommands.OrderBy(static c => c.Name, StringComparer.Ordinal))
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Instantiates a new <see cref="global::StreamApiClient.Library.Item.WithLibraryItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        public WithLibraryItemRequestBuilder(Dictionary<string, object> pathParameters) : base("{+baseurl}/library/{libraryId}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::StreamApiClient.Library.Item.WithLibraryItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public WithLibraryItemRequestBuilder(string rawUrl) : base("{+baseurl}/library/{libraryId}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
